using System;
using System.Collections.Generic;
using System.IO;

namespace JournalApp
{
    // Entry class to represent a journal entry
    public class Entry
    {
        public string Date { get; set; }
        public string Prompt { get; set; }
        public string Response { get; set; }

        // Constructor for creating an entry
        public Entry(string date, string prompt, string response)
        {
            Date = date;
            Prompt = prompt;
            Response = response;
        }

        // Format entry display
        public override string ToString()
        {
            return $"Date: {Date}\nPrompt: {Prompt}\nResponse: {Response}\n";
        }
    }

    // Journal class to handle journal entries
    public class Journal
    {
        public List<Entry> Entries { get; set; } = new List<Entry>();

        private List<string> Prompts = new List<string>
        {
            "Who was the most interesting person I interacted with today?",
            "What was the best part of my day?",
            "How did I see the hand of the Lord in my life today?",
            "What was the strongest emotion I felt today?",
            "If I had one thing I could do over today, what would it be?"
        };

        // Add a new entry with a random prompt
        public void WriteEntry()
        {
            Random random = new Random();
            string prompt = Prompts[random.Next(Prompts.Count)];
            Console.WriteLine("Journal Prompt: " + prompt);
            Console.Write("Your response: ");
            string response = Console.ReadLine();
            string date = DateTime.Now.ToString("yyyy-MM-dd");

            Entries.Add(new Entry(date, prompt, response));
            Console.WriteLine("Entry added successfully.\n");
        }

        // Display all entries in the journal
        public void DisplayJournal()
        {
            if (Entries.Count == 0)
            {
                Console.WriteLine("No entries in the journal.\n");
                return;
            }

            foreach (var entry in Entries)
            {
                Console.WriteLine(entry);
            }
        }

        // Save the journal to a file
        public void SaveJournal()
        {
            Console.Write("Enter filename to save the journal (e.g., journal.txt): ");
            string fileName = Console.ReadLine();

            using (StreamWriter writer = new StreamWriter(fileName))
            {
                foreach (var entry in Entries)
                {
                    writer.WriteLine($"{entry.Date}|{entry.Prompt}|{entry.Response}");
                }
            }

            Console.WriteLine("Journal saved successfully.\n");
        }

        // Load the journal from a file
        public void LoadJournal()
        {
            Console.Write("Enter filename to load the journal (e.g., journal.txt): ");
            string fileName = Console.ReadLine();

            if (!File.Exists(fileName))
            {
                Console.WriteLine("File not found.\n");
                return;
            }

            Entries.Clear();
            using (StreamReader reader = new StreamReader(fileName))
            {
                string line;
                while ((line = reader.ReadLine()) != null)
                {
                    string[] parts = line.Split('|');
                    if (parts.Length == 3)
                    {
                        Entries.Add(new Entry(parts[0], parts[1], parts[2]));
                    }
                }
            }

            Console.WriteLine("Journal loaded successfully.\n");
        }
    }

    class Program
    {
        static void Main(string[] args)
        {
            Journal journal = new Journal();
            bool exit = false;

            while (!exit)
            {
                Console.WriteLine("Journal Menu:");
                Console.WriteLine("1. Write a new entry");
                Console.WriteLine("2. Display the journal");
                Console.WriteLine("3. Save the journal to a file");
                Console.WriteLine("4. Load the journal from a file");
                Console.WriteLine("5. Exit");
                Console.Write("Choose an option: ");
                string choice = Console.ReadLine();

                switch (choice)
                {
                    case "1":
                        journal.WriteEntry();
                        break;
                    case "2":
                        journal.DisplayJournal();
                        break;
                    case "3":
                        journal.SaveJournal();
                        break;
                    case "4":
                        journal.LoadJournal();
                        break;
                    case "5":
                        exit = true;
                        break;
                    default:
                        Console.WriteLine("Invalid option. Please try again.\n");
                        break;
                }
            }

            Console.WriteLine("Goodbye!");
        }
    }
}